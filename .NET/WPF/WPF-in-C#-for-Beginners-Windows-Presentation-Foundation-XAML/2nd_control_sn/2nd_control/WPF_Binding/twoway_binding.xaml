<Window x:Class="_2nd_control.WPF_Binding.twoway_binding"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_2nd_control.WPF_Binding"
        mc:Ignorable="d"
        Title="twoway_binding" Height="450" Width="800">
    <Grid>
        <Slider x:Name="my_slider" HorizontalAlignment="Left" Margin="46,49,0,0" VerticalAlignment="Top" Width="259"/>
        <TextBox x:Name="mt_tb" HorizontalAlignment="Left" Height="23" Margin="318,44,0,0" TextWrapping="Wrap" Text="{Binding Value, ElementName=my_slider, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="58" SourceUpdated="mt_tb_SourceUpdated" TargetUpdated="mt_tb_TargetUpdated"/>
        <!--
        TwoWay 모드는 양방향 전송이라고 생각하면됨. 바인딩된 타겟과 소스의 값이 공유되어 서로 영향을 끼침. 하지만 포커스가 해제되어야 값이 변경됨. (예 : textbox에 5를 쓰고 다른 컨트롤을 클릭하지 않으면 값이 변경되지 않음)
        NotifyOnSourceUpdated : SourceUpdated 이벤트를 사용하려면 설정을 해줘야함.
        NotifyOnTargetUpdated : TargetUpdated 이벤트를 사용하려면 설정을 해줘야함.
        -->
        <TextBox HorizontalAlignment="Left" Height="23" Margin="328,106,0,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="120"/>
        <Button x:Name="my_btn" Content="Button" HorizontalAlignment="Left" Margin="399,44,0,0" VerticalAlignment="Top" Width="75" Click="my_btn_Click"/>

    </Grid>
</Window>
